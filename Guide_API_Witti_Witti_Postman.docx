# Guide Complet des APIs Witti_Witti pour Postman
## Documentation Technique avec Exemples Concrets

---

## üìã Table des mati√®res

1. [Configuration de base](#configuration-de-base)
2. [Authentification](#authentification)
3. [Profil Client](#profil-client)
4. [R√©compenses et Achats](#r√©compenses-et-achats)
5. [FAQ](#faq)
6. [Sondages](#sondages)
7. [Support](#support)
8. [Administration](#administration)
9. [Configuration Postman](#configuration-postman)
10. [Codes d'erreur](#codes-derreur)
11. [Ordre de test recommand√©](#ordre-de-test-recommand√©)

---

## üîß Configuration de base

**URL de base :** `http://10.125.30.8`

**Headers communs :**
```
Content-Type: application/json
Authorization: Bearer {token} (apr√®s connexion)
```

---

## üîê 1. AUTHENTIFICATION

### 1.1 Connexion Utilisateur Client

**Endpoint :** `POST /accounts/login`

**Headers :**
```
Content-Type: application/json
```

**Body (JSON) :**
```json
{
    "identifiant": "123456",
    "password": "123456"
}
```

**R√©ponse attendue :**
```json
{
    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTczMDAwMDAwMCwianRpIjoiYjJkYzE5YzEtYzE5Yy0xMWVlLWE5YzAtYzE5YzE5YzE5YzE5YyIsInR5cGUiOiJhY2Nlc3MiLCJzdWIiOiJ1c2VyX3Rlc3QiLCJuYmYiOjE3MzAwMDAwMDAsImNzcmYiOiI5YzE5YzE5YzE5YzE5YzE5YzE5YzE5YzE5YzE5YzE5YzE5YzE5YyJ9.abc123..."
}
```

**Exemple avec donn√©es r√©elles :**
- **Identifiant :** `123456`
- **Mot de passe :** `123456`
- **Client associ√© :** User Test (500 jetons, cat√©gorie Executive)

### 1.2 Connexion Administrateur

**Endpoint :** `POST /accounts/admin/login`

**Headers :**
```
Content-Type: application/json
```

**Body (JSON) :**
```json
{
    "email": "superadmin@gmail.com",
    "password": "123456"
}
```

**R√©ponse attendue :**
```json
{
    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
    "role": "super_admin",
    "name": "Super Admin",
    "email": "superadmin@gmail.com"
}
```

**Exemple avec donn√©es r√©elles :**
- **Email :** `superadmin@gmail.com`
- **Mot de passe :** `123456`
- **R√¥le :** Super administrateur (10000 jetons, cat√©gorie First Class)

### 1.3 D√©connexion Utilisateur

**Endpoint :** `POST /customer/logout`

**Headers :**
```
Authorization: Bearer {token}
```

**R√©ponse attendue :**
```json
{
    "msg": "D√©connexion r√©ussie"
}
```

### 1.4 D√©connexion Administrateur

**Endpoint :** `POST /admin/logout`

**Headers :**
```
Authorization: Bearer {admin_token}
```

**R√©ponse attendue :**
```json
{
    "msg": "D√©connexion r√©ussie"
}
```

---

## üë§ 2. PROFIL CLIENT

### 2.1 Tableau de bord client

**Endpoint :** `GET /customer/{customer_code}/dashboard`

**Headers :**
```
Authorization: Bearer {token}
```

**Exemple d'URL :** `GET /customer/user_test/dashboard`

**R√©ponse attendue :**
```json
{
    "category": "Executive",
    "jetons": 500,
    "percentage": 44.44,
    "short_name": "Test",
    "tokens_to_next_tier": 500,
    "last_transactions": [
        {
            "date": "2025-06-23",
            "amount": "200",
            "type": "Bonus fid√©lit√©"
        },
        {
            "date": "2025-06-25",
            "amount": "100",
            "type": "Achat carte cadeau"
        },
        {
            "date": "2025-06-27",
            "amount": "50",
            "type": "Achat carte cadeau"
        }
    ]
}
```

**Explication des donn√©es :**
- **Client :** User Test
- **Cat√©gorie :** Executive (100-999 jetons)
- **Jetons actuels :** 500
- **Pourcentage dans la cat√©gorie :** 44.44% (500 jetons sur 900 possibles)
- **Jetons pour le niveau suivant :** 500 (pour atteindre Executive+)

### 2.2 Profil client d√©taill√©

**Endpoint :** `GET /customer/{customer_code}/profile`

**Exemple d'URL :** `GET /customer/user_test/profile`

**R√©ponse attendue :**
```json
{
    "first_name": "User",
    "short_name": "Test",
    "agency": "RGK",
    "jetons": 500,
    "category": "Executive",
    "percentage": 44.44,
    "tokens_to_next_tier": 500
}
```

### 2.3 Historique des transactions

**Endpoint :** `GET /customer/{customer_code}/transactions`

**Param√®tres optionnels :**
- `period`: `week`, `month`, `year`
- `start_date`: `2025-06-01`
- `end_date`: `2025-06-30`

**Exemple d'URL :** `GET /customer/user_test/transactions?period=month`

**R√©ponse attendue :**
```json
{
    "transactions": [
        {
            "date": "2025-06-27",
            "amount": "200",
            "type": "Bonus fid√©lit√©"
        },
        {
            "date": "2025-06-25",
            "amount": "100",
            "type": "Achat carte cadeau"
        },
        {
            "date": "2025-06-23",
            "amount": "50",
            "type": "Achat carte cadeau"
        }
    ],
    "total_transactions": 3,
    "period_start": "2025-06-01",
    "period_end": "2025-06-30",
    "trends": {
        "deposit_percentage": 33.33,
        "withdrawal_percentage": 66.67
    }
}
```

### 2.4 Notifications client

**Endpoint :** `GET /customer/{customer_code}/notifications`

**Exemple d'URL :** `GET /customer/user_test/notifications`

**R√©ponse attendue :**
```json
{
    "msg": "Notifications r√©cup√©r√©es avec succ√®s",
    "notifications": [
        {
            "id": 1,
            "message": "Bienvenue sur la plateforme MyWitti !",
            "created_at": "2025-06-21 10:00:00"
        },
        {
            "id": 2,
            "message": "Votre commande #123 a √©t√© valid√©e",
            "created_at": "2025-06-26 14:30:00"
        }
    ]
}
```

---

## üéÅ 3. R√âCOMPENSES ET ACHATS

### 3.1 Liste des r√©compenses disponibles

**Endpoint :** `GET /lot/rewards`

**Headers :**
```
Authorization: Bearer {token}
```

**R√©ponse attendue :**
```json
[
    {
        "id": 1,
        "title": "Carte cadeau 5000 FCFA",
        "tokens_required": 50,
        "image_url": "/static/uploads/gift-card.jpg",
        "category": "Eco Premium",
        "quantity_available": 100
    },
    {
        "id": 2,
        "title": "Carte cadeau 10000 FCFA",
        "tokens_required": 100,
        "image_url": "/static/uploads/gift-card.jpg",
        "category": "Executive",
        "quantity_available": 50
    },
    {
        "id": 3,
        "title": "Smartphone Samsung",
        "tokens_required": 1500,
        "image_url": "/static/uploads/smartphone.jpg",
        "category": "Executive +",
        "quantity_available": 10
    },
    {
        "id": 4,
        "title": "Voyage √† Paris",
        "tokens_required": 5000,
        "image_url": "/static/uploads/paris.jpg",
        "category": "First Class",
        "quantity_available": 2
    }
]
```

**Explication des r√©compenses :**
- **Carte cadeau 5000 FCFA :** 50 jetons (accessible √† tous)
- **Carte cadeau 10000 FCFA :** 100 jetons (Executive minimum)
- **Smartphone Samsung :** 1500 jetons (Executive+ minimum)
- **Voyage √† Paris :** 5000 jetons (First Class minimum)

### 3.2 Ajouter/Retirer des favoris

**Endpoint :** `POST /lot/rewards/{reward_id}/favorite`

**Headers :**
```
Authorization: Bearer {token}
Content-Type: application/json
```

**Exemple d'URL :** `POST /lot/rewards/1/favorite`

**Body (JSON) :**
```json
{}
```

**R√©ponse attendue (ajout) :**
```json
{
    "msg": "R√©compense ajout√©e aux favoris"
}
```

**R√©ponse attendue (retrait) :**
```json
{
    "msg": "R√©compense retir√©e des favoris"
}
```

### 3.3 Liste des favoris

**Endpoint :** `GET /lot/favorites`

**Headers :**
```
Authorization: Bearer {token}
```

**R√©ponse attendue :**
```json
{
    "count": 2,
    "items": [
        {
            "id": 1,
            "title": "Carte cadeau 5000 FCFA",
            "tokens_required": 50,
            "category": "Eco Premium",
            "image_url": "/static/uploads/gift-card.jpg"
        },
        {
            "id": 2,
            "title": "Carte cadeau 10000 FCFA",
            "tokens_required": 100,
            "category": "Executive",
            "image_url": "/static/uploads/gift-card.jpg"
        }
    ]
}
```

### 3.4 Ajouter au panier

**Endpoint :** `POST /lot/cart`

**Headers :**
```
Authorization: Bearer {token}
Content-Type: application/json
```

**Body (JSON) :**
```json
{
    "reward_id": 1,
    "quantity": 2
}
```

**R√©ponse attendue :**
```json
{
    "msg": "Carte cadeau 5000 FCFA ajout√©e au panier",
    "quantity": 2,
    "total_tokens": 100
}
```

### 3.5 Voir le panier

**Endpoint :** `GET /lot/cart`

**Headers :**
```
Authorization: Bearer {token}
```

**R√©ponse attendue :**
```json
{
    "jetons_disponibles": 500,
    "jetons_requis": 100,
    "achat_possible": true,
    "transactions": [
        {
            "id": 1,
            "title": "Carte cadeau 5000 FCFA",
            "quantity": 2,
            "tokens_required_per_item": 50,
            "total_tokens": 100,
            "image_url": "/static/uploads/gift-card.jpg",
            "transaction_id": "550e8400-e29b-41d4-a716-446655440000"
        }
    ],
    "notifications": []
}
```

**Explication :**
- **Jetons disponibles :** 500 (solde du client)
- **Jetons requis :** 100 (2 √ó 50 jetons)
- **Achat possible :** true (500 ‚â• 100)

### 3.6 Passer une commande

**Endpoint :** `POST /lot/place-order`

**Headers :**
```
Authorization: Bearer {token}
Content-Type: application/json
```

**Body (JSON) :**
```json
{}
```

**R√©ponse attendue :**
```json
{
    "id": "order-550e8400-e29b-41d4-a716-446655440000",
    "customer": "User Test",
    "contact": "N/A",
    "date": "2025-06-28",
    "heure": "14:30:00",
    "amount": 100,
    "items": [
        {
            "reward_id": 1,
            "title": "Carte cadeau 5000 FCFA",
            "tokens_required_per_item": 50,
            "total_tokens": 100,
            "image_url": "/static/uploads/gift-card.jpg"
        }
    ]
}
```

**R√©sultat de la commande :**
- **Nouveau solde client :** 400 jetons (500 - 100)
- **Statut de la commande :** "pending" (en attente de validation admin)
- **Notification cr√©√©e :** "Commande pass√©e avec succ√®s pour 100 jetons (en attente de validation)."

---

## üìã 4. FAQ

### 4.1 Liste des FAQ

**Endpoint :** `GET /faq`

**Headers :**
```
Authorization: Bearer {token}
```

**R√©ponse attendue :**
```json
{
    "msg": "FAQ r√©cup√©r√©es avec succ√®s",
    "faqs": [
        {
            "id": 1,
            "question": "Comment fonctionne le syst√®me de jetons ?",
            "answer": "Les jetons sont des points que vous gagnez en utilisant nos services. Vous pouvez les √©changer contre des r√©compenses."
        },
        {
            "id": 2,
            "question": "Comment passer une commande ?",
            "answer": "Allez dans la section \"Lots\" et s√©lectionnez l'article de votre choix. Ajoutez-le au panier et validez votre commande."
        },
        {
            "id": 3,
            "question": "Comment contacter le support ?",
            "answer": "Vous pouvez nous contacter via l'onglet \"Support\" ou par t√©l√©phone au +2250710922213."
        }
    ]
}
```

---

## üìä 5. SONDAGES

### 5.1 Liste des sondages actifs

**Endpoint :** `GET /survey/surveys`

**Headers :**
```
Authorization: Bearer {token}
```

**R√©ponse attendue :**
```json
{
    "msg": "Sondages r√©cup√©r√©s avec succ√®s",
    "surveys": [
        {
            "id": 1,
            "title": "Satisfaction g√©n√©rale",
            "description": "Comment √©valuez-vous votre exp√©rience sur notre plateforme ?",
            "is_active": true,
            "options": [
                {
                    "id": 1,
                    "option_text": "Tr√®s mal",
                    "option_value": 1
                },
                {
                    "id": 2,
                    "option_text": "Mal",
                    "option_value": 2
                },
                {
                    "id": 3,
                    "option_text": "Moyen",
                    "option_value": 3
                },
                {
                    "id": 4,
                    "option_text": "Bien",
                    "option_value": 4
                },
                {
                    "id": 5,
                    "option_text": "Tr√®s bien",
                    "option_value": 5
                }
            ]
        }
    ]
}
```

### 5.2 R√©pondre √† un sondage

**Endpoint :** `POST /survey/surveys/{survey_id}/respond`

**Headers :**
```
Authorization: Bearer {token}
Content-Type: application/json
```

**Exemple d'URL :** `POST /survey/surveys/1/respond`

**Body (JSON) :**
```json
{
    "option_id": 5
}
```

**R√©ponse attendue :**
```json
{
    "msg": "R√©ponse enregistr√©e avec succ√®s",
    "survey_id": 1,
    "option_selected": "Tr√®s bien"
}
```

---

## üÜò 6. SUPPORT

### 6.1 Informations de contact

**Endpoint :** `GET /support/contact`

**Headers :**
```
Authorization: Bearer {token}
```

**R√©ponse attendue :**
```json
{
    "phone": "+2250710922213",
    "whatsapp": "+2250710922213",
    "email": "misterjohn0798@gmail.com",
    "default_message": "Bonjour, j'ai besoin d'aide avec l'application."
}
```

### 6.2 Cr√©er une demande de support

**Endpoint :** `POST /support/request`

**Headers :**
```
Authorization: Bearer {token}
Content-Type: application/json
```

**Body (JSON) :**
```json
{
    "subject": "Probl√®me de connexion",
    "description": "Je n'arrive pas √† me connecter √† mon compte depuis hier",
    "request_type": "Assistance"
}
```

**Types de demande autoris√©s :**
- `Reclamation`
- `Assistance`
- `Autre`

**R√©ponse attendue :**
```json
{
    "message": "Demande de support cr√©√©e avec succ√®s",
    "request_id": 1
}
```

---

## üë®‚Äçüíº 7. ADMINISTRATION

### 7.1 Profil administrateur

**Endpoint :** `GET /admin/profile`

**Headers :**
```
Authorization: Bearer {admin_token}
```

**R√©ponse attendue :**
```json
{
    "id": 1,
    "first_name": "Super",
    "last_name": "Admin",
    "email": "superadmin@gmail.com",
    "user_id": "superadmin",
    "is_admin": true,
    "is_superuser": true,
    "date_joined": "2025-01-01 00:00:00",
    "last_login": "2025-06-28 14:30:00"
}
```

### 7.2 Liste des clients

**Endpoint :** `GET /admin/customers`

**Headers :**
```
Authorization: Bearer {admin_token}
```

**R√©ponse attendue :**
```json
{
    "msg": "Clients r√©cup√©r√©s avec succ√®s",
    "customers": [
        {
            "id": 1,
            "customer_code": "superadmin",
            "first_name": "Super",
            "short_name": "Admin",
            "jetons": 10000,
            "category": "First Class",
            "phone_number": "+2250710922213",
            "date_ouverture": "2025-01-01"
        },
        {
            "id": 2,
            "customer_code": "user_test",
            "first_name": "User",
            "short_name": "Test",
            "jetons": 500,
            "category": "Executive",
            "phone_number": "+22501234567",
            "date_ouverture": "2025-01-01"
        }
    ]
}
```

### 7.3 Liste des commandes

**Endpoint :** `GET /admin/orders`

**Headers :**
```
Authorization: Bearer {admin_token}
```

**R√©ponse attendue :**
```json
{
    "msg": "Commandes r√©cup√©r√©es avec succ√®s",
    "orders": [
        {
            "id": "order-550e8400-e29b-41d4-a716-446655440000",
            "customer": "User Test",
            "date": "2025-06-28",
            "heure": "14:30:00",
            "amount": 100,
            "status": "pending",
            "items": [
                {
                    "reward_id": 1,
                    "title": "Carte cadeau 5000 FCFA",
                    "tokens_required_per_item": 50,
                    "total_tokens": 100
                }
            ]
        }
    ]
}
```

### 7.4 Valider une commande

**Endpoint :** `PUT /admin/orders/{order_id}/validate`

**Headers :**
```
Authorization: Bearer {admin_token}
Content-Type: application/json
```

**Exemple d'URL :** `PUT /admin/orders/order-550e8400-e29b-41d4-a716-446655440000/validate`

**Body (JSON) :**
```json
{
    "admin_notes": "Commande valid√©e et exp√©di√©e"
}
```

**R√©ponse attendue :**
```json
{
    "msg": "Commande valid√©e avec succ√®s",
    "order_id": "order-550e8400-e29b-41d4-a716-446655440000",
    "status": "validated"
}
```

### 7.5 Annuler une commande

**Endpoint :** `PUT /admin/orders/{order_id}/cancel`

**Headers :**
```
Authorization: Bearer {admin_token}
Content-Type: application/json
```

**Body (JSON) :**
```json
{
    "reason": "Stock insuffisant"
}
```

**R√©ponse attendue :**
```json
{
    "msg": "Commande annul√©e avec succ√®s",
    "order_id": "order-550e8400-e29b-41d4-a716-446655440000",
    "status": "cancelled",
    "refunded_tokens": 100
}
```

### 7.6 Gestion du stock

**Endpoint :** `GET /admin/stock`

**Headers :**
```
Authorization: Bearer {admin_token}
```

**R√©ponse attendue :**
```json
{
    "msg": "Stock r√©cup√©r√© avec succ√®s",
    "stock": [
        {
            "id": 1,
            "title": "Carte cadeau 5000 FCFA",
            "current_stock": 100,
            "category": "Eco Premium",
            "jetons_required": 50
        },
        {
            "id": 2,
            "title": "Carte cadeau 10000 FCFA",
            "current_stock": 50,
            "category": "Executive",
            "jetons_required": 100
        },
        {
            "id": 3,
            "title": "Smartphone Samsung",
            "current_stock": 10,
            "category": "Executive +",
            "jetons_required": 1500
        },
        {
            "id": 4,
            "title": "Voyage √† Paris",
            "current_stock": 2,
            "category": "First Class",
            "jetons_required": 5000
        }
    ]
}
```

### 7.7 Statistiques

**Endpoint :** `GET /admin/stats`

**Headers :**
```
Authorization: Bearer {admin_token}
```

**R√©ponse attendue :**
```json
{
    "msg": "Statistiques r√©cup√©r√©es avec succ√®s",
    "stats": {
        "total_customers": 2,
        "total_orders": 1,
        "total_revenue_tokens": 100,
        "pending_orders": 1,
        "validated_orders": 0,
        "cancelled_orders": 0,
        "top_categories": [
            {
                "category": "Executive",
                "orders_count": 1,
                "total_tokens": 100
            }
        ],
        "recent_activity": [
            {
                "date": "2025-06-28",
                "action": "Nouvelle commande",
                "customer": "User Test",
                "amount": 100
            }
        ]
    }
}
```

### 7.8 Demandes de support

**Endpoint :** `GET /admin/support-requests`

**Headers :**
```
Authorization: Bearer {admin_token}
```

**R√©ponse attendue :**
```json
{
    "msg": "Demandes de support r√©cup√©r√©es avec succ√®s",
    "requests": [
        {
            "id": 1,
            "subject": "Probl√®me de connexion",
            "description": "Je n'arrive pas √† me connecter √† mon compte depuis hier",
            "request_type": "Assistance",
            "status": "Pending",
            "customer": "User Test",
            "created_at": "2025-06-28 15:00:00"
        }
    ]
}
```

---

## ‚öôÔ∏è Configuration Postman

### 1. Variables d'environnement

Cr√©ez un environnement avec ces variables :

| Variable | Valeur initiale | Description |
|----------|----------------|-------------|
| `base_url` | `http://127.0.0.1:5000` | URL de base de l'API |
| `user_token` | (vide) | Token JWT pour l'utilisateur client |
| `admin_token` | (vide) | Token JWT pour l'administrateur |
| `customer_code` | `user_test` | Code client pour les tests |

### 2. Collection Postman

Organisez vos requ√™tes en collections :

#### Collection "Auth"
- Login Utilisateur
- Login Admin
- Logout Utilisateur
- Logout Admin

#### Collection "Customer"
- Dashboard Client
- Profil Client
- Transactions Client
- Notifications Client

#### Collection "Rewards"
- Liste des R√©compenses
- Ajouter aux Favoris
- Liste des Favoris
- Ajouter au Panier
- Voir le Panier
- Passer une Commande

#### Collection "Support"
- Contact Support
- Cr√©er Demande Support

#### Collection "Admin"
- Profil Admin
- Liste Clients
- Liste Commandes
- Valider Commande
- Annuler Commande
- Gestion Stock
- Statistiques
- Demandes Support

### 3. Tests automatiques

#### Test pour login utilisateur
```javascript
if (pm.response.code === 200) {
    const response = pm.response.json();
    pm.environment.set("user_token", response.access_token);
    console.log("Token utilisateur sauvegard√©");
}
```

#### Test pour login admin
```javascript
if (pm.response.code === 200) {
    const response = pm.response.json();
    pm.environment.set("admin_token", response.access_token);
    console.log("Token admin sauvegard√©");
}
```

#### Test de validation de r√©ponse
```javascript
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

pm.test("Response has required fields", function () {
    const response = pm.response.json();
    pm.expect(response).to.have.property('msg');
});
```

---

## üö® Codes d'erreur courants

| Code | Signification | Exemple |
|------|---------------|---------|
| **200** | Succ√®s | Requ√™te trait√©e avec succ√®s |
| **201** | Cr√©√© | Nouvelle ressource cr√©√©e |
| **400** | Donn√©es invalides | `{"message": "ID de r√©compense et quantit√© valides requis"}` |
| **401** | Non authentifi√© | `{"message": "Invalid identifiant or password"}` |
| **403** | Acc√®s interdit | `{"message": "Access denied: You can only access your own dashboard"}` |
| **404** | Ressource non trouv√©e | `{"message": "Customer not found"}` |
| **500** | Erreur serveur | `{"error": "Internal server error"}` |

### Exemples d'erreurs courantes

#### Erreur 401 - Authentification √©chou√©e
```json
{
    "message": "Invalid identifiant or password"
}
```

#### Erreur 403 - Acc√®s interdit
```json
{
    "message": "Access denied: You can only access your own dashboard"
}
```

#### Erreur 400 - Donn√©es invalides
```json
{
    "message": "ID de r√©compense et quantit√© valides requis"
}
```

---

## üìù Ordre de test recommand√©

### Phase 1 : Configuration et Authentification
1. **Login utilisateur** (`user_test` / `123456`) ‚Üí Sauvegarder le token
2. **Login admin** (`superadmin@gmail.com` / `123456`) ‚Üí Sauvegarder le token admin

### Phase 2 : Tests Client
3. **Profil client** ‚Üí V√©rifier les donn√©es (500 jetons, Executive)
4. **Dashboard client** ‚Üí V√©rifier les statistiques
5. **Transactions client** ‚Üí V√©rifier l'historique
6. **Notifications client** ‚Üí V√©rifier les messages

### Phase 3 : Tests R√©compenses
7. **Liste des r√©compenses** ‚Üí Voir les 4 r√©compenses disponibles
8. **Ajouter aux favoris** ‚Üí Tester avec la carte cadeau 5000 FCFA
9. **Liste des favoris** ‚Üí V√©rifier l'ajout
10. **Ajouter au panier** ‚Üí Tester avec 2 cartes cadeaux 5000 FCFA
11. **Voir le panier** ‚Üí V√©rifier le calcul (100 jetons requis)
12. **Passer une commande** ‚Üí Tester l'achat

### Phase 4 : Tests Support et FAQ
13. **FAQ** ‚Üí V√©rifier les 3 questions/r√©ponses
14. **Contact support** ‚Üí V√©rifier les informations
15. **Cr√©er demande support** ‚Üí Tester la cr√©ation

### Phase 5 : Tests Sondages
16. **Liste des sondages** ‚Üí V√©rifier le sondage "Satisfaction g√©n√©rale"
17. **R√©pondre au sondage** ‚Üí Tester avec l'option "Tr√®s bien"

### Phase 6 : Tests Administration
18. **Profil admin** ‚Üí V√©rifier les donn√©es superadmin
19. **Liste des clients** ‚Üí V√©rifier les 2 clients
20. **Liste des commandes** ‚Üí V√©rifier la commande en attente
21. **Valider une commande** ‚Üí Tester la validation
22. **Gestion du stock** ‚Üí V√©rifier les 4 produits
23. **Statistiques** ‚Üí V√©rifier les m√©triques
24. **Demandes de support** ‚Üí V√©rifier les demandes

### Phase 7 : Nettoyage
25. **Logout utilisateur** ‚Üí Nettoyer la session
26. **Logout admin** ‚Üí Nettoyer la session admin

---

## üìä Donn√©es de test disponibles

### Utilisateurs de test
| Type | Identifiant | Email | Mot de passe | Jetons | Cat√©gorie |
|------|-------------|-------|--------------|--------|-----------|
| **Client** | `user_test` | `user_test@gmail.com` | `123456` | 500 | Executive |
| **Admin** | `superadmin` | `superadmin@gmail.com` | `123456` | 10000 | First Class |

### R√©compenses disponibles
| ID | Titre | Jetons | Cat√©gorie | Stock |
|----|-------|--------|-----------|-------|
| 1 | Carte cadeau 5000 FCFA | 50 | Eco Premium | 100 |
| 2 | Carte cadeau 10000 FCFA | 100 | Executive | 50 |
| 3 | Smartphone Samsung | 1500 | Executive + | 10 |
| 4 | Voyage √† Paris | 5000 | First Class | 2 |

### Transactions de test
- **User Test :** 3 transactions (2 achats + 1 bonus)
- **Superadmin :** 3 transactions (2 achats + 1 bonus)

### Notifications de test
- **User Test :** 2 notifications
- **Superadmin :** 3 notifications

### FAQ de test
- 3 questions/r√©ponses sur le fonctionnement

### Sondage de test
- "Satisfaction g√©n√©rale" avec 5 options (1-5)

---

## üéØ Conseils pour les tests

### 1. Testez les cas limites
- **Jetons insuffisants :** Essayez d'acheter le voyage √† Paris (5000 jetons) avec user_test (500 jetons)
- **Stock insuffisant :** Essayez d'acheter plus que le stock disponible
- **Donn√©es invalides :** Envoyez des donn√©es manquantes ou incorrectes

### 2. V√©rifiez les autorisations
- **Client vs Admin :** Testez les routes admin avec un token client
- **Acc√®s crois√© :** Essayez d'acc√©der aux donn√©es d'un autre client

### 3. Testez les workflows complets
- **Achat complet :** Login ‚Üí Ajouter au panier ‚Üí Commander ‚Üí Validation admin
- **Support complet :** Cr√©er demande ‚Üí V√©rifier en admin

### 4. Surveillez les logs
- V√©rifiez les logs de l'application pour les erreurs
- Surveillez les modifications en base de donn√©es

---

## üìû Support technique

En cas de probl√®me lors des tests :

1. **V√©rifiez la connexion :** `http://127.0.0.1:5000`
2. **V√©rifiez les logs :** Console Flask
3. **V√©rifiez la base :** Donn√©es de test pr√©sentes
4. **V√©rifiez les tokens :** Validit√© et expiration

**Contact :** `misterjohn0798@gmail.com`
**T√©l√©phone :** `+2250710922213`

---

*Document g√©n√©r√© le 28 juin 2025*
*Version : 1.0*
*Application : Witti_Witti API* 