"""Miser Ã  jour des migrations

Revision ID: 90954b12098b
Revises: 114de8ad976a
Create Date: 2025-07-02 14:32:57.446190

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '90954b12098b'
down_revision = '114de8ad976a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mywitti_faq',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(length=255), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mywitti_resultat_criteria',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('criteria_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mywitti_survey',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mywitti_survey_option',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('survey_id', sa.BigInteger(), nullable=False),
    sa.Column('option_text', sa.String(length=50), nullable=False),
    sa.Column('option_value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['survey_id'], ['mywitti_survey.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mywitti_referral',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('referrer_id', sa.BigInteger(), nullable=False),
    sa.Column('referred_email', sa.String(length=255), nullable=False),
    sa.Column('referral_code', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['referrer_id'], ['mywitti_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('referral_code')
    )
    op.create_table('mywitti_support_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('request_type', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['mywitti_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mywitti_client_recompense',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('customer_id', sa.BigInteger(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['mywitti_category.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['mywitti_client.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['mywitti_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mywitti_resultat_point',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('customer_id', sa.BigInteger(), nullable=False),
    sa.Column('notation', sa.String(length=255), nullable=False),
    sa.Column('jeton', sa.Integer(), nullable=False),
    sa.Column('mois', sa.String(length=50), nullable=False),
    sa.Column('montant', sa.BigInteger(), nullable=False),
    sa.Column('date_notes', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['mywitti_client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mywitti_resultat_total',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('customer_id', sa.BigInteger(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['mywitti_client.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mywitti_survey_response',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('survey_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('customer_id', sa.BigInteger(), nullable=False),
    sa.Column('option_id', sa.BigInteger(), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['mywitti_client.id'], ),
    sa.ForeignKeyConstraint(['option_id'], ['mywitti_survey_option.id'], ),
    sa.ForeignKeyConstraint(['survey_id'], ['mywitti_survey.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['mywitti_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('support_requests')
    op.drop_table('referrals')
    op.drop_table('resultat_total')
    op.drop_table('survey_responses')
    op.drop_table('survey_options')
    op.drop_table('surveys')
    op.drop_table('resultat_clientarecompense')
    op.drop_table('resultat_criteria')
    op.drop_table('faqs')
    op.drop_table('resultat_point')
    with op.batch_alter_table('mywitti_category', schema=None) as batch_op:
        batch_op.alter_column('category_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('slug',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('level',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('min_jetons',
               existing_type=sa.BIGINT(),
               nullable=False)
        batch_op.alter_column('nb_jours',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_unique_constraint('category_slug_key', ['slug'])
        batch_op.create_index('idx_category_level', ['level'], unique=False)
        batch_op.create_index('idx_category_level_min_jetons', ['level', 'min_jetons'], unique=False)
        batch_op.create_index('idx_category_min_jetons', ['min_jetons'], unique=False)
        batch_op.create_index('idx_category_name', ['category_name'], unique=False)
        batch_op.create_unique_constraint(None, ['slug'])

    with op.batch_alter_table('mywitti_client', schema=None) as batch_op:
        batch_op.add_column(sa.Column('working_balance', sa.BigInteger(), nullable=True))
        batch_op.add_column(sa.Column('reliquat_transaction', sa.BigInteger(), nullable=True))
        batch_op.add_column(sa.Column('reliquat_stabilite', sa.BigInteger(), nullable=True))
        batch_op.add_column(sa.Column('jetons_transaction', sa.BigInteger(), nullable=True))
        batch_op.add_column(sa.Column('jetons_stabilite', sa.BigInteger(), nullable=True))
        batch_op.alter_column('customer_code',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('nombre_jours',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.create_index('idx_client_active', ['customer_code'], unique=False, postgresql_where=sa.text('jetons > 0'))
        batch_op.create_index('idx_client_category_jetons', ['category_id', 'jetons'], unique=False)
        batch_op.create_index('idx_client_customer_code', ['customer_code'], unique=False)
        batch_op.create_index('idx_client_first_name', ['first_name'], unique=False)
        batch_op.create_index('idx_client_name_search', ['first_name', 'short_name'], unique=False)
        batch_op.create_index('idx_client_phone_number', ['phone_number'], unique=False)
        batch_op.create_index('idx_client_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_client_working_balance', ['working_balance'], unique=False)
        batch_op.create_unique_constraint('mywitti_client_ukey', ['customer_code'])
        batch_op.create_unique_constraint(None, ['customer_code'])
        batch_op.drop_constraint('mywitti_client_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'mywitti_users', ['user_id'], ['id'], onupdate='CASCADE', ondelete='SET NULL')

    with op.batch_alter_table('mywitti_client_jetons_daily', schema=None) as batch_op:
        batch_op.alter_column('client_id',
               existing_type=sa.BIGINT(),
               nullable=False)
        batch_op.alter_column('date_jour',
               existing_type=sa.DATE(),
               nullable=False)
        batch_op.alter_column('solde_jetons',
               existing_type=sa.BIGINT(),
               nullable=False)
        batch_op.create_index('idx_daily_client_date_solde', ['client_id', 'date_jour', 'solde_jetons'], unique=False)
        batch_op.create_index('idx_daily_date_solde', ['date_jour', 'solde_jetons'], unique=False)

    with op.batch_alter_table('mywitti_client_palier_history', schema=None) as batch_op:
        batch_op.alter_column('client_id',
               existing_type=sa.BIGINT(),
               nullable=False)
        batch_op.alter_column('palier',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('date_debut',
               existing_type=sa.DATE(),
               nullable=False)
        batch_op.alter_column('statut',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.create_index('idx_palier_history_active', ['client_id', 'date_debut'], unique=False, postgresql_where=sa.text("statut = 'en_cours'"))
        batch_op.create_index('idx_palier_history_client_date', ['client_id', 'date_debut'], unique=False)
        batch_op.create_index('idx_palier_history_client_period', ['client_id', 'date_debut', 'date_fin'], unique=False)
        batch_op.create_index('idx_palier_history_date_fin', ['date_fin'], unique=False)
        batch_op.create_index('idx_palier_history_statut', ['statut'], unique=False)

    with op.batch_alter_table('mywitti_comptes', schema=None) as batch_op:
        batch_op.alter_column('customer_code',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('numero_compte',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('date_ouverture_compte',
               existing_type=sa.DATE(),
               nullable=False)
        batch_op.create_index('idx_comptes_agence', ['agence'], unique=False)
        batch_op.create_index('idx_comptes_balance', ['working_balance'], unique=False)
        batch_op.create_index('idx_comptes_customer', ['customer_code'], unique=False)
        batch_op.create_index('idx_comptes_customer_balance', ['customer_code', 'working_balance'], unique=False)
        batch_op.create_index('idx_comptes_numero', ['numero_compte'], unique=False)
        batch_op.create_index('idx_comptes_positive_balance', ['customer_code', 'working_balance'], unique=False, postgresql_where=sa.text('working_balance > 0'))
        batch_op.create_unique_constraint('mywitti_comptes_ukey', ['numero_compte'])
        batch_op.create_unique_constraint(None, ['numero_compte'])
        batch_op.create_foreign_key(None, 'mywitti_client', ['customer_code'], ['customer_code'], ondelete='CASCADE')

    with op.batch_alter_table('mywitti_jetons_transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('type_transaction', sa.String(length=30), nullable=True))
        batch_op.add_column(sa.Column('reliquat', sa.BigInteger(), nullable=True))
        batch_op.alter_column('client_id',
               existing_type=sa.BIGINT(),
               nullable=False)
        batch_op.alter_column('montant',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_index('idx_jetons_transactions_type', ['type_transaction'], unique=False)
        batch_op.create_index('idx_transactions_client_date_montant', ['client_id', 'date_transaction', 'montant'], unique=False)
        batch_op.create_index('idx_transactions_date_montant', ['date_transaction', 'montant'], unique=False)
        batch_op.create_index('idx_transactions_lot', ['lot_id'], unique=False)
        batch_op.create_index('idx_transactions_montant', ['montant'], unique=False)
        batch_op.drop_constraint('mywitti_jetons_transactions_client_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('mywitti_jetons_transactions_lot_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'mywitti_client', ['client_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'mywitti_lots', ['lot_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('mywitti_lots', schema=None) as batch_op:
        batch_op.alter_column('libelle',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('slug',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.create_index('idx_lots_available', ['category_id', 'jetons'], unique=False, postgresql_where=sa.text('stock > 0'))
        batch_op.create_index('idx_lots_category', ['category_id'], unique=False)
        batch_op.create_index('idx_lots_category_jetons', ['category_id', 'jetons'], unique=False)
        batch_op.create_index('idx_lots_jetons', ['jetons'], unique=False)
        batch_op.create_index('idx_lots_libelle', ['libelle'], unique=False)
        batch_op.create_index('idx_lots_stock', ['stock'], unique=False)
        batch_op.create_unique_constraint('mywitti_lots_slug_key', ['slug'])
        batch_op.create_unique_constraint(None, ['slug'])
        batch_op.drop_constraint('mywitti_lots_category_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'mywitti_category', ['category_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('mywitti_lots_claims', schema=None) as batch_op:
        batch_op.alter_column('client_id',
               existing_type=sa.BIGINT(),
               nullable=False)
        batch_op.alter_column('lot_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_index('idx_claims_client_lot', ['client_id', 'lot_id'], unique=False)
        batch_op.create_index('idx_claims_client_statut', ['client_id', 'statut'], unique=False)
        batch_op.create_index('idx_claims_date', ['date_reclamation'], unique=False)
        batch_op.create_index('idx_claims_pending', ['client_id', 'date_reclamation'], unique=False, postgresql_where=sa.text("statut = 'en_attente'"))
        batch_op.create_index('idx_claims_statut', ['statut'], unique=False)
        batch_op.drop_constraint('mywitti_lots_claims_lot_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('mywitti_lots_claims_client_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'mywitti_lots', ['lot_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'mywitti_client', ['client_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('mywitti_lots_favoris', schema=None) as batch_op:
        batch_op.alter_column('client_id',
               existing_type=sa.BIGINT(),
               nullable=False)
        batch_op.alter_column('lot_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_index('idx_favoris_client_lot', ['client_id', 'lot_id'], unique=False)
        batch_op.create_index('idx_favoris_client_lot_date', ['client_id', 'lot_id', 'date_ajout'], unique=False)
        batch_op.create_unique_constraint('unique_client_lot_favoris', ['client_id', 'lot_id'])
        batch_op.drop_constraint('mywitti_lots_favoris_client_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('mywitti_lots_favoris_lot_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'mywitti_client', ['client_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'mywitti_lots', ['lot_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('mywitti_user_type', schema=None) as batch_op:
        batch_op.alter_column('type_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.create_unique_constraint('mywitti_user_type_type_name_key', ['type_name'])
        batch_op.create_unique_constraint(None, ['type_name'])

    with op.batch_alter_table('mywitti_users', schema=None) as batch_op:
        batch_op.create_index('idx_mywitti_users_user_type_id', ['user_type_id'], unique=False)
        batch_op.create_index('idx_users_active', ['user_id'], unique=False, postgresql_where=sa.text('is_active = true'))
        batch_op.create_index('idx_users_date_joined', ['date_joined'], unique=False)
        batch_op.create_index('idx_users_last_login', ['last_login'], unique=False)
        batch_op.create_index('idx_users_type_active', ['user_type', 'is_active'], unique=False)
        batch_op.create_index('idx_users_user_type', ['user_type'], unique=False)
        batch_op.create_unique_constraint('users_user_id_key', ['user_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('mywitti_users', schema=None) as batch_op:
        batch_op.drop_constraint('users_user_id_key', type_='unique')
        batch_op.drop_index('idx_users_user_type')
        batch_op.drop_index('idx_users_type_active')
        batch_op.drop_index('idx_users_last_login')
        batch_op.drop_index('idx_users_date_joined')
        batch_op.drop_index('idx_users_active', postgresql_where=sa.text('is_active = true'))
        batch_op.drop_index('idx_mywitti_users_user_type_id')

    with op.batch_alter_table('mywitti_user_type', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint('mywitti_user_type_type_name_key', type_='unique')
        batch_op.alter_column('type_name',
               existing_type=sa.VARCHAR(),
               nullable=True)

    with op.batch_alter_table('mywitti_lots_favoris', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('mywitti_lots_favoris_lot_id_fkey', 'mywitti_lots', ['lot_id'], ['id'])
        batch_op.create_foreign_key('mywitti_lots_favoris_client_id_fkey', 'mywitti_client', ['client_id'], ['id'])
        batch_op.drop_constraint('unique_client_lot_favoris', type_='unique')
        batch_op.drop_index('idx_favoris_client_lot_date')
        batch_op.drop_index('idx_favoris_client_lot')
        batch_op.alter_column('lot_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('client_id',
               existing_type=sa.BIGINT(),
               nullable=True)

    with op.batch_alter_table('mywitti_lots_claims', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('mywitti_lots_claims_client_id_fkey', 'mywitti_client', ['client_id'], ['id'])
        batch_op.create_foreign_key('mywitti_lots_claims_lot_id_fkey', 'mywitti_lots', ['lot_id'], ['id'])
        batch_op.drop_index('idx_claims_statut')
        batch_op.drop_index('idx_claims_pending', postgresql_where=sa.text("statut = 'en_attente'"))
        batch_op.drop_index('idx_claims_date')
        batch_op.drop_index('idx_claims_client_statut')
        batch_op.drop_index('idx_claims_client_lot')
        batch_op.alter_column('lot_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('client_id',
               existing_type=sa.BIGINT(),
               nullable=True)

    with op.batch_alter_table('mywitti_lots', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('mywitti_lots_category_id_fkey', 'mywitti_category', ['category_id'], ['id'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint('mywitti_lots_slug_key', type_='unique')
        batch_op.drop_index('idx_lots_stock')
        batch_op.drop_index('idx_lots_libelle')
        batch_op.drop_index('idx_lots_jetons')
        batch_op.drop_index('idx_lots_category_jetons')
        batch_op.drop_index('idx_lots_category')
        batch_op.drop_index('idx_lots_available', postgresql_where=sa.text('stock > 0'))
        batch_op.alter_column('slug',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('libelle',
               existing_type=sa.VARCHAR(),
               nullable=True)

    with op.batch_alter_table('mywitti_jetons_transactions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('mywitti_jetons_transactions_lot_id_fkey', 'mywitti_lots', ['lot_id'], ['id'])
        batch_op.create_foreign_key('mywitti_jetons_transactions_client_id_fkey', 'mywitti_client', ['client_id'], ['id'])
        batch_op.drop_index('idx_transactions_montant')
        batch_op.drop_index('idx_transactions_lot')
        batch_op.drop_index('idx_transactions_date_montant')
        batch_op.drop_index('idx_transactions_client_date_montant')
        batch_op.drop_index('idx_jetons_transactions_type')
        batch_op.alter_column('montant',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('client_id',
               existing_type=sa.BIGINT(),
               nullable=True)
        batch_op.drop_column('reliquat')
        batch_op.drop_column('type_transaction')

    with op.batch_alter_table('mywitti_comptes', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint('mywitti_comptes_ukey', type_='unique')
        batch_op.drop_index('idx_comptes_positive_balance', postgresql_where=sa.text('working_balance > 0'))
        batch_op.drop_index('idx_comptes_numero')
        batch_op.drop_index('idx_comptes_customer_balance')
        batch_op.drop_index('idx_comptes_customer')
        batch_op.drop_index('idx_comptes_balance')
        batch_op.drop_index('idx_comptes_agence')
        batch_op.alter_column('date_ouverture_compte',
               existing_type=sa.DATE(),
               nullable=True)
        batch_op.alter_column('numero_compte',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('customer_code',
               existing_type=sa.VARCHAR(),
               nullable=True)

    with op.batch_alter_table('mywitti_client_palier_history', schema=None) as batch_op:
        batch_op.drop_index('idx_palier_history_statut')
        batch_op.drop_index('idx_palier_history_date_fin')
        batch_op.drop_index('idx_palier_history_client_period')
        batch_op.drop_index('idx_palier_history_client_date')
        batch_op.drop_index('idx_palier_history_active', postgresql_where=sa.text("statut = 'en_cours'"))
        batch_op.alter_column('statut',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('date_debut',
               existing_type=sa.DATE(),
               nullable=True)
        batch_op.alter_column('palier',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('client_id',
               existing_type=sa.BIGINT(),
               nullable=True)

    with op.batch_alter_table('mywitti_client_jetons_daily', schema=None) as batch_op:
        batch_op.drop_index('idx_daily_date_solde')
        batch_op.drop_index('idx_daily_client_date_solde')
        batch_op.alter_column('solde_jetons',
               existing_type=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('date_jour',
               existing_type=sa.DATE(),
               nullable=True)
        batch_op.alter_column('client_id',
               existing_type=sa.BIGINT(),
               nullable=True)

    with op.batch_alter_table('mywitti_client', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('mywitti_client_user_id_fkey', 'mywitti_users', ['user_id'], ['id'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint('mywitti_client_ukey', type_='unique')
        batch_op.drop_index('idx_client_working_balance')
        batch_op.drop_index('idx_client_user_id')
        batch_op.drop_index('idx_client_phone_number')
        batch_op.drop_index('idx_client_name_search')
        batch_op.drop_index('idx_client_first_name')
        batch_op.drop_index('idx_client_customer_code')
        batch_op.drop_index('idx_client_category_jetons')
        batch_op.drop_index('idx_client_active', postgresql_where=sa.text('jetons > 0'))
        batch_op.alter_column('nombre_jours',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=True)
        batch_op.alter_column('customer_code',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_column('jetons_stabilite')
        batch_op.drop_column('jetons_transaction')
        batch_op.drop_column('reliquat_stabilite')
        batch_op.drop_column('reliquat_transaction')
        batch_op.drop_column('working_balance')

    with op.batch_alter_table('mywitti_category', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_index('idx_category_name')
        batch_op.drop_index('idx_category_min_jetons')
        batch_op.drop_index('idx_category_level_min_jetons')
        batch_op.drop_index('idx_category_level')
        batch_op.drop_constraint('category_slug_key', type_='unique')
        batch_op.alter_column('nb_jours',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('min_jetons',
               existing_type=sa.BIGINT(),
               nullable=True)
        batch_op.alter_column('level',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('slug',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('category_name',
               existing_type=sa.VARCHAR(),
               nullable=True)

    op.create_table('survey_responses',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('survey_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('customer_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('option_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('submitted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['mywitti_client.id'], name='survey_responses_customer_id_fkey'),
    sa.ForeignKeyConstraint(['option_id'], ['survey_options.id'], name='survey_responses_option_id_fkey'),
    sa.ForeignKeyConstraint(['survey_id'], ['surveys.id'], name='survey_responses_survey_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['mywitti_users.id'], name='survey_responses_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='survey_responses_pkey')
    )
    op.create_table('resultat_point',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('notation', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('jeton', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('mois', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('montant', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('date_notes', sa.DATE(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['mywitti_client.id'], name='resultat_point_customer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='resultat_point_pkey')
    )
    op.create_table('survey_options',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('survey_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('option_text', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('option_value', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['survey_id'], ['surveys.id'], name='survey_options_survey_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='survey_options_pkey')
    )
    op.create_table('faqs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('question', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('answer', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='faqs_pkey')
    )
    op.create_table('resultat_criteria',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('criteria_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='resultat_criteria_pkey')
    )
    op.create_table('resultat_clientarecompense',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('customer_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['mywitti_category.id'], name='resultat_clientarecompense_category_id_fkey'),
    sa.ForeignKeyConstraint(['customer_id'], ['mywitti_client.id'], name='resultat_clientarecompense_customer_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['mywitti_users.id'], name='resultat_clientarecompense_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='resultat_clientarecompense_pkey')
    )
    op.create_table('surveys',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='surveys_pkey')
    )
    op.create_table('resultat_total',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('score', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['mywitti_client.id'], name='resultat_total_customer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='resultat_total_pkey')
    )
    op.create_table('referrals',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('referrer_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('referred_email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('referral_code', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['referrer_id'], ['mywitti_users.id'], name='referrals_referrer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='referrals_pkey'),
    sa.UniqueConstraint('referral_code', name='referrals_referral_code_key')
    )
    op.create_table('support_requests',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('subject', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('request_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['mywitti_users.id'], name='support_requests_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='support_requests_pkey')
    )
    op.drop_table('mywitti_survey_response')
    op.drop_table('mywitti_resultat_total')
    op.drop_table('mywitti_resultat_point')
    op.drop_table('mywitti_client_recompense')
    op.drop_table('mywitti_support_request')
    op.drop_table('mywitti_referral')
    op.drop_table('mywitti_survey_option')
    op.drop_table('mywitti_survey')
    op.drop_table('mywitti_resultat_criteria')
    op.drop_table('mywitti_faq')
    # ### end Alembic commands ###
